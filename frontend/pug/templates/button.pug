mixin button(props= 0)

  - let {type="", size="", color="", iconId="", iconBg="", half="", opacity="", otherClasses=""} = props

  - let classList= 'button'

  - if (iconId != "")
    - classList+= ` button_icon`

  - if (type != "")
    - classList+= ` button_${type}`

  - if (color != "")
    - classList+= ` button_${color}`

  - if (size != "")
    - classList+= ` button_${size}`

  - if (iconBg != "")
    - classList+= ` button_icon_bg_${iconBg}`

  - if (half != "")
    - classList+= ` button_half button_${half}`

  - if (opacity != "")
    - classList+= ` button_opacity_${opacity}`

  - if (otherClasses != "")
    - classList+= ` ${otherClasses}`


  case type
    when "circle"
      button(class= classList)&attributes(attributes)= attrs
        svg.button__icon
          use(xlink:href= iconId)

    when "icon_left"
      button(class= classList)&attributes(attributes)= attrs
        svg.button__icon
          use(xlink:href= iconId)
        span.button__text
          block

    when "icon_right"
      button(class= classList)&attributes(attributes)= attrs
        span.button__text
          block
        svg.button__icon
          use(xlink:href= iconId)

    when "underlined"
      button(class= classList)&attributes(attributes)= rest
        span.button__text
          block

    default
      button(class= classList)&attributes(attributes)= rest
        span.button__text
          block
